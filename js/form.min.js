import{allSelectors,allSelectorArgs,allEnchantments,unsetOption,allSoundsFancy,allParticles}from"../data/data.min.js";class GeneralFormRow{constructor({id:e,defaultVal:t,ignoreOutput:i,randomId:n=0,type:a}){$.extend(this,$('<div class="form-row"></div>')),this.default=t,this.id=e??(n&&"a"+(Math.random()+1).toString(36).substring(2)),this.ignoreOutput=i,a&&this.attr("row-type",a)}addToDOM(e,t){if(!e)throw"Cannot add field to element: no destination specified!";switch(e=$(e),t?.toLowerCase?.()){case"prepend":this.prependTo(e);break;case"insertAfter":this.insertAfter(e);break;case"insertBefore":this.insertBefore(e);break;default:this.appendTo(e)}return this}disable(e,t,i,n){if(this.find(".why-disabled-container").remove(),e){let a=$(`\n                <div class="why-disabled-container">\n                    <span>${t??"Why is this disabled?"}</span>\n                    <div class="why-disabled-message">\n                        ${e}\n                    </div>\n                </div>\n            `);switch(i||(i=this.whyDisabledLocation??this.children(".input-container")),n){case"prepend":i.prepend(a);break;case"insertAfter":a.insertAfter(i);break;case"insertBefore":a.insertBefore(i);break;default:i.append(a)}}return this.find('*:not([tabindex="-1"])').attr("tabindex",-2),this.find(".error").removeClass("error"),this.addClass("row-disabled"),this}enable(){if(this.find('[tabindex="-2"]').attr("tabindex",null),this.removeClass("row-disabled"),this.find(".why-disabled-container").remove(),"Advancements"==this.find(".label-container label").html())throw new Error("test");return this}lock(e,t,i,n){return this.disable(e,t??"Why is this locked?",i,n),this.addClass("row-locked"),this}unlock(){this.enable(),this.removeClass("row-locked")}setComingSoon(e,t,i){return this.disable(e||"How soon? Nobody knows for now...",'<span style="color: var(--red);">Coming Soon...</span>',t,i),this.addClass("coming-soon"),this}isDisabled(){return this.hasClass("row-disabled")||this.hasClass("section-disabled")}isLocked(){return this.hasClass("row-locked")||this.hasClass("section-locked")}isComingSoon(){return this.hasClass("coming-soon")}isFilled(){return Boolean(this.value)}}class VisualFormRow{constructor(){}addToDOM(e,t){if(!e)throw"Cannot add field to a form: no form element passed!";switch(e=$(e),t?.toLowerCase?.()){case"prepend":this.prependTo(e);break;case"insertAfter":this.insertAfter(e);break;case"insertBefore":this.insertBefore(e);break;default:this.appendTo(e)}return this}}class Section{constructor({collapsible:e=1,collapsed:t=0,optional:i=0,header:n}){if(e&&!n)throw new Error("A header is required to make the section collapsible. Expected header object, got undefined.");$.extend(this,$("<section></section>")),n&&(n=new FormRow.visual.Header({...n,textAfter:i?{text:"(optional)",css:{fontSize:"80%",opacity:0.5,display:"flex",alignItems:"flex-end"}}:null})),this.header=n;let a=this;$(n.children()[0]).prepend($('<i class="collapsible-sign fas fa-angle-down"></i>')),e&&(n.addClass("collapsible-header"),n.attr("tabindex",0),a.addClass("collapsible"),n.on("click",(function(){n.toggleClass("active"),n.hasClass("active")?(a.removeClass("hidden"),setTimeout((()=>{a.toggleClass("active")}),50)):(a.removeClass("active"),setTimeout((()=>{a.addClass("hidden")}),500))})),t?a.addClass("hidden"):(n.addClass("active"),a.addClass("active")))}addToDOM(e,t){if(!e)throw"Cannot add field to a form: no form element passed!";switch(e=$(e),t?.toLowerCase?.()){case"prepend":this.prependTo(e),this.header.prependTo(e);break;case"insertAfter":this.header.insertAfter(e),this.insertAfter(e);break;case"insertBefore":this.insertBefore(e),this.header.insertBefore(e);break;default:this.header.appendTo(e),this.appendTo(e)}return this}disable(e,t){if(this.header.find(".why-disabled-container").remove(),e){let i=$(`\n                <div class="why-disabled-container">\n                    <span>${t??"Why is this disabled?"}</span>\n                    <div class="why-disabled-message">\n                        ${e}\n                    </div>\n                </div>\n            `);this.header.append(i)}return this.find('*:not([tabindex="-1"])').attr("tabindex",-2),this.find(".error").removeClass("error"),this.addClass("section-disabled"),this}enable(){return this.find('[tabindex="-2"]').attr("tabindex",null),this.removeClass("section-disabled"),this.header.find(".why-disabled-container").remove(),this}isDisabled(){return this.hasClass("row-disabled")||this.hasClass("section-disabled")}}class BoxContainer extends VisualFormRow{constructor({hideable:e=1,id:t,additionalChildren:i,hidden:n=0,classes:a=""}){if(super(),$.extend(this,$(`\n            <div class="input-container-master">\n                <input class="invisible" type="text"${t?' id="'+t+'" ':""} tabindex="-1">\n                <div class="input-container box-container ${a}">\n                \n                </div>\n            </div>\n        `)),this.dummyInput=this.children("input.invisible"),this.inputContainer=this.children(".input-container"),e){let e=$('\n                <button class="show-hide-button">\n                    <i class="fas fa-angle-down"></i>\n                </button>\n            ');this.prepend(e);let t=this;e.click((function(){t.inputContainer.toggleClass("hidden"),$(this).toggleClass("active"),$(this).blur(),t.inputContainer.hasClass("hidden")||$(t.inputContainer.find("input:not(.invisible), select")[0]).focus()})),n&&this.inputContainer.addClass("hidden")}this.additionalChildren=i?[]:null,i?.forEach((e=>{let t=$(e);this.append(t),this.additionalChildren.push(t)}))}}let FormRow={Dummy:class extends GeneralFormRow{constructor({id:e,ignoreId:t,defaultVal:i}){if(!e&&!t)throw new Error("Expected field ID, got undefined");super({id:e,defaultVal:i,type:"dummy"}),$.extend(this,$(`<input class="invisible" ${e?'id="'+e+'"':""}>`))}get value(){return this.val()}set value(e){this.val(e??null),this.trigger("input")}},Text:class extends GeneralFormRow{constructor({id:e,ignoreId:t,size:i="M",label:n,inputOnly:a,negationButton:l,inputRegex:s,maxLength:r,required:o,tip:d,inputClass:u,inputCss:c,ignoreOutput:p,defaultVal:h}){if(!i)throw new Error("Expected field size, got undefined");if(!e&&!t)throw new Error("Expected field ID, got undefined");if(!n&&!a)throw new Error("Expected field label, got undefined");super({id:e,defaultVal:h,ignoreOutput:p,type:"text"}),a||this.append($(`\n                    <div class="label-container">\n                        <label for="${this.id??""}">${n}</label>\n                    </div>\n                    `)),a?this.removeClass("form-row").addClass("input-container unselectable"):this.append($('\n                    <div class="input-container unselectable">\n                        <div class="clear-button-container">\n                            <button class="clear-button" tabindex="-1">x</button>\n                        </div>\n                    </div>\n                    '));let f=this.find(".input-container");this.whyDisabledLocation=f;let m=$(`<input class="textfield size${i.toUpperCase()} ${u||""}" type="text" name="text-field"${this.id?' id="'+this.id+'" ':""} autocomplete="off">`);this.inputElement=m,c&&m.css(c);let v=this.find(".clear-button");if(v.click((function(){let e=$(this).parent().parent().children("input, select");e.val(null),e[0].focus(),e.trigger("input")})),v.hover((function(){m.addClass("fake-hover")}),(function(){m.removeClass("fake-hover")})),v.attr({title:"Clear the field"}),l&&(s=[...s??[],[/(.+)!/,"$1"]]),s&&m.on("input",(function(e){let t=$(this).val(),i=e.target.selectionStart;s.forEach((e=>{Array.isArray(e)||(e=[e,""]);let n=0;for(;t.match(e[0]);){if(n>99)throw"Executing of regex patterns on input took too long, action aborted";let a=t.length;t=t.replace(e[0],e[1]),$(this).val(t),i-=a-t.length,n++}})),$(this).val(t),this.setSelectionRange(i,i)})),r&&m.attr("maxlength",r),o&&(this.find(".label-container")?.append($('<span class="required-asterisk" title="This field is required!">*</span>')),m.on("input",(function(){m.removeClass("error"),m.attr({title:""}),this.value&&$(this).parent().children(".invisible")&&!$(this).parent().children(".invisible").val()||(m.addClass("error"),m.attr({title:"This field is required!"}))})),m.on("blur",(function(){this.value&&$(this).parent().children(".invisible")&&!$(this).parent().children(".invisible").val()||(m.addClass("error"),m.attr({title:"This field is required!"}))}))),l){let e=$('<button class="negation-button">!</button>');e.click((function(){m.val().match(/!/)?(m.val(m.val().replace(/!/,"")),e.removeClass("active")):(m.val("!"+m.val()),e.addClass("active")),m.trigger("input"),m.focus()})),m.on("input",(function(){m.val().match(/!/)?e.addClass("active"):e.removeClass("active")})),a?this.prepend(e):f.prepend(e),m.insertAfter(e)}else f.prepend(m);d&&(a?(this.append($("<hr>")),this.append(generateTipElement(d))):(f.append($("<hr>")),f.append(generateTipElement(d))))}get value(){return this.find("input").val()}set value(e){this.find("input").val(e??null),this.find("input").trigger("input")}addInputListeners(e,t){this.inputElement.on(e,t)}},Number:class extends GeneralFormRow{constructor({id:e,ignoreId:t,min:i,max:n,size:a="M",label:l,inputOnly:s,inputRegex:r,required:o,tip:d,inputClass:u,inputCss:c,ignoreOutput:p,defaultVal:h,format:f}){if(!e&&!t)throw new Error("Expected field ID, got undefined");if(!l&&!s)throw new Error("Expected field label, got undefined");super({id:e,defaultVal:h,ignoreOutput:p,type:"number"}),s||this.append($(`\n                    <div class="label-container">\n                        <label for="${this.id??""}">${l}</label>\n                    </div>\n                    `)),s?this.removeClass("form-row").addClass("input-container unselectable"):this.append($('\n                    <div class="input-container unselectable">\n                        <div class="clear-button-container">\n                            <button class="clear-button" tabindex="-1">x</button>\n                        </div>\n                    </div>\n                    '));let m=this.find(".input-container");this.whyDisabledLocation=m;let v=$(`<input class="textfield size${a.toUpperCase()} ${u||""}" type="text" name="text-field"${this.id?' id="'+this.id+'"':""} autocomplete="off">`);this.inputElement=v,c&&v.css(c);let b=this.find(".clear-button");b.click((function(){let e=$(this).parent().parent().children("input, select");e.val(null),e[0].focus(),e.trigger("input")})),b.hover((function(){v.addClass("fake-hover")}),(function(){v.removeClass("fake-hover")})),b.attr({title:"Clear the field"}),r="int"==f?[/[^0-9\-]/,[/(.+)-/,"$1"],[/^(-?)0{2,}/,"$10"],...r??[]]:[/[^0-9,\.\-]/,[/,/,"."],[/(.+)-/,"$1"],[/\.(.*)\./,".$1",-1],[/^(-?)\./,"$10."],[/^(-?)0{2,}/,"$10"],...r??[]],v.on("input",(function(e){let t=$(this).val(),i=e.target.selectionStart;r.forEach((e=>{Array.isArray(e)||(e=[e,""]);let n=0;for(;t.match(e[0]);){if(n>99)throw"Executing of regex patterns on input took too long, action aborted";let a=t.length;t=t.replace(e[0],e[1]),$(this).val(t),i-=a-t.length,e[2]&&(i+=e[2]),n++}})),$(this).val(t),this.setSelectionRange(i,i)})),i=i??-1/0,n=n??1/0,v.on("input",(function(){""!==v.val()&&(Number(v.val())<i&&v.val(i),Number(v.val())>n&&v.val(n))})),o&&(this.find(".label-container").append?.($('<span class="required-asterisk" title="This field is required!">*</span>')),v.on("input",(function(){v.removeClass("error"),v.attr({title:""}),this.value&&$(this).parent().children(".invisible")&&!$(this).parent().children(".invisible").val()||(v.addClass("error"),v.attr({title:"This field is required!"}))})),v.on("blur",(function(){this.value&&$(this).parent().children(".invisible")&&!$(this).parent().children(".invisible").val()||(v.addClass("error"),v.attr({title:"This field is required!"}))}))),s?this.prepend(v):m.prepend(v),d&&(s?(this.append($("<hr>")),this.append(generateTipElement(d))):(m.append($("<hr>")),m.append(generateTipElement(d))))}get value(){return this.find("input").val()}set value(e){this.find("input").val(e),this.find("input").trigger("input")}addInputListeners(e,t){this.inputElement.on(e,t)}},Select:class extends GeneralFormRow{constructor({id:e,ignoreId:t,options:i,filter:n,label:a,inputOnly:l,required:s,tip:r,inputClass:o,ignoreOutput:d,negationButton:u,defaultVal:c}){if(!e&&!t)throw"Expected field ID, got undefined";if(!a&&!l)throw"Expected field label, got undefined";if(!i||!i.length)throw"Expected field option list, got undefined";super({id:e,defaultVal:c,ignoreOutput:d,type:"select"}),l?this.removeClass("form-row").addClass("input-container unselectable"):(this.append($(`\n                    <div class="label-container">\n                        <label for="${this.id??""}">${a}</label>\n                    </div>\n                    `)),this.append($('<div class="input-container unselectable"></div>')));let p=this.find(".input-container");this.whyDisabledLocation=p;let h=$(`<select name="option-field"${this.id?' id="'+this.id+'" ':""} class="option-field ${o||""}"></select>`),f=$(`<input class="invisible ${o||""}" type="text"${this.id?' id="'+this.id+'" ':""} tabindex="-1">`);if(l?this.append(f):p.append(f),this.inputElement=h,this.dummyInput=f,i.forEach((e=>{Array.isArray(e)||(e=[e,e]),h.append($(new Option(e[0],e[1])))})),s&&(this.find(".label-container").append($('<span class="required-asterisk" title="This field is required!">*</span>')),h.on("input",(function(){h.removeClass("error"),h.attr({title:""}),"null"==this.value&&(h.addClass("error"),h.attr({title:"This field is required!"}))})),h.on("blur",(function(){"null"==this.value&&(h.addClass("error"),h.attr({title:"This field is required!"}))}))),h.on("input",b),u){let e=$('<button class="negation-button">!</button>');e.click((function(){e.toggleClass("active"),h.trigger("input")})),l?this.prepend(e):p.prepend(e),h.insertAfter(e)}else p.prepend(h);if(n){let e=$('<input type="text" class="textfield sizeS filter-field" placeholder="Filter" autocomplete="off">');e.on("input",(function(){let t=new RegExp($(this).val().replace(/-/g,"[-]"),"i");""==$(this).val()?$(this).prev().children().prop("disabled",0):$(this).prev().children().each(((e,i)=>{!$(i).html().match(t)||$(i).hasClass("unset")?$(i).prop("disabled",1):$(i).prop("disabled",0)})),e.removeClass("error");let i=h.find("option:not(:disabled)"+($(this).val()?":not(.unset)":""));i.length?h.val(i[0].value):(h.val(null),e.addClass("error"))})),e.on("keyup",(function(){$(this).outerWidth(`calc(${this.value.length+3}ch + 12px`),m($(this))})),l?this.append(e):p.append(e)}function m(e){let t="";r&&(t+=" - 24px - 0.4rem - 1px - 0.4rem"),n&&(t+=` - ${e.outerWidth()}px - 0.4rem`),h.css({"max-width":`calc(100%${t})`})}m(this.find(".filter-field")),r&&!l&&(l?(this.append($("<hr>")),this.append(generateTipElement(r))):(p.append($("<hr>")),p.append(generateTipElement(r))));let v=this;function b(){let e=v.find(".negation-button").hasClass("active"),t=v.inputElement.val();t&&"null"!=t?v.dummyInput.val([e?"!":"",v.inputElement.val()].join("")):v.dummyInput.val(null)}b()}get value(){return this.dummyInput.val()}set value(e){let t=0;e.match?.(/!/)&&(t=1,e=e.replace(/!/,"")),t?this.find(".negation-button").addClass("active"):this.find(".negation-button").removeClass("active"),this.find("select").val(e??null),this.find("select").trigger("input")}isFilled(){return Boolean(this.value&&"null"!=this.value)}addInputListeners(e,t){this.inputElement.on(e,t)}},Vec3:class extends GeneralFormRow{constructor({id:e,ignoreId:t,label:i,size:n="XS",tip:a,inputClass:l,ignoreOutput:s,defaultVal:r,required:o=0}){if(!e&&!t)throw"Expected field ID, got undefined";if(!i)throw"Expected field label, got undefined";super({id:e,defaultVal:r,ignoreOutput:s,type:"vec3"}),this.append($(`\n                <div class="label-container">\n                    <label for="${e?e+"1":""}">${i}</label>\n                </div>\n                `)),this.find(".label-container > label").hover((function(){$(this).parent().parent().children(".input-container").children(".uuid-container").addClass("fake-hover")}),(function(){$(this).parent().parent().children(".input-container").children(".uuid-container").removeClass("fake-hover")})),this.append($(`\n                <div class="input-container unselectable">\n                    <div class="vec3-container">\n                        <input class="vec3-field size${n.toUpperCase()} ${l?l+"1":""}" type="text"${this.id?' id="'+this.id+'1" ':""} autocomplete="off">\n                        <input class="vec3-field size${n.toUpperCase()} ${l?l+"2":""}" type="text"${this.id?' id="'+this.id+'2" ':""} autocomplete="off">\n                        <input class="vec3-field size${n.toUpperCase()} ${l?l+"3":""}" type="text"${this.id?' id="'+this.id+'3" ':""} autocomplete="off">\n                        <input class="invisible ${l||""}" type="text" tabindex="-1">\n                        <div class="clear-button-container">\n                            <button class="clear-button" tabindex="-1">x</button>\n                        </div>\n                    </div>\n                </div>\n                `));let d=this.find(".input-container");this.whyDisabledLocation=d;let u=d.children(".vec3-container"),c=u.children("input:not(.invisible)"),p=u.children("input.invisible");this.inputElement=c,this.dummyInput=p;let h=this.find(".clear-button");h.click((function(){let e=$(this).parent().parent().children("input, select");e.val(null),e[0].focus(),m()})),h.hover((function(){u.addClass("fake-hover")}),(function(){u.removeClass("fake-hover")})),h.attr({title:"Clear the field"}),c.on("input",(function(){if(this.value?.match(/[^ ]* [^ ]* ?[^ ]*/)){let e=this.value.split(" ");e.forEach(((t,i)=>{f.forEach((t=>{for(Array.isArray(t)||(t=[t,""]);e[i].match(t[0]);)e[i]=e[i].replace(t[0],t[1])}))})),$(c[0]).val(e[0]),$(c[1]).val(e[1]),$(c[2]).val(e[2])}m()}));let f=[/[^0-9,\.\-]/,[/,/,"."],[/(.+)-/,"$1"],[/\.(.*)\./,".$1",-1],[/^(-?)\./,"$10."],[/^(-?)0{2,}/,"$10"]];function m(){let e=[];c.each(((t,i)=>{e.push($(i).val())}));let t=e.join(" ");t.trim()?p.val(t):p.val(null)}c.on("input",(function(e){let t=$(this).val(),i=e.target.selectionStart;f.forEach((e=>{Array.isArray(e)||(e=[e,""]);let n=0;for(;t.match(e[0]);){if(n>99)throw"Executing of regex patterns on input took too long, action aborted";let a=t.length;t=t.replace(e[0],e[1]),$(this).val(t),i-=a-t.length,n++}})),$(this).val(t),this.setSelectionRange(i,i)})),o&&(this.find(".label-container").append?.($('<span class="required-asterisk" title="This field is required!">*</span>')),c.on("input",(function(){c.removeClass("error"),c.attr({title:""}),this.value&&$(this).parent().children(".invisible")&&!$(this).parent().children(".invisible").val()||(c.addClass("error"),c.attr({title:"This field is required!"}))})),c.on("blur",(function(){this.value&&$(this).parent().children(".invisible")&&!$(this).parent().children(".invisible").val()||(c.addClass("error"),c.attr({title:"This field is required!"}))}))),c.on("input",m),a&&(d.append($("<hr>")),d.append(generateTipElement(a)))}get value(){return this.find("input.invisible").val()}set value(e){this.find("input").each(((t,i)=>{$(i).val(e?.[t]??null)}))}isFilled(){return Boolean(this.value?.match(/.+ .+ .+/))}addInputListeners(e,t){this.inputElement.on(e,t)}},UUID:class extends GeneralFormRow{constructor({id:e,ignoreId:t,label:i,tip:n,inputClass:a,ignoreOutput:l,defaultVal:s}){if(!e&&!t)throw"Expected field ID, got undefined";if(!i)throw"Expected field label, got undefined";super({id:e,defaultVal:s,ignoreOutput:l,type:"uuid"}),this.append($(`\n                <div class="label-container">\n                    <label for="${e?e+"1":""}">${i}</label>\n                </div>\n                `)),this.find(".label-container > label").hover((function(){$(this).parent().parent().children(".input-container").children(".uuid-container").addClass("fake-hover")}),(function(){$(this).parent().parent().children(".input-container").children(".uuid-container").removeClass("fake-hover")})),this.append($(`\n                <div class="input-container unselectable">\n                    <div class="uuid-container">\n                        <input class="uuid-field ${a?a+"1":""}" type="text"${this.id?' id="'+this.id+'1" ':""} autocomplete="off">\n                        <input class="uuid-field ${a?a+"2":""}" type="text"${this.id?' id="'+this.id+'2" ':""} autocomplete="off">\n                        <input class="uuid-field ${a?a+"3":""}" type="text"${this.id?' id="'+this.id+'3" ':""} autocomplete="off">\n                        <input class="uuid-field ${a?a+"4":""}" type="text"${this.id?' id="'+this.id+'4" ':""} autocomplete="off">\n                        <input class="invisible ${a||""}" type="text" tabindex="-1">\n                        <div class="clear-button-container">\n                            <button class="clear-button" tabindex="-1">x</button>\n                        </div>\n                    </div>\n                </div>\n                `));let r=this.find(".input-container");this.whyDisabledLocation=r;let o=r.children(".uuid-container"),d=o.children("input:not(.invisible)"),u=o.children("input.invisible");this.inputElement=d,this.dummyInput=u;let c=this.find(".clear-button");c.click((function(){let e=$(this).parent().parent().children("input, select");e.val(null),e[0].focus(),h()})),c.hover((function(){o.addClass("fake-hover")}),(function(){o.removeClass("fake-hover")})),c.attr({title:"Clear the field"}),d.on("input",(function(){if(this.value?.match(/[^,]*,[^,]*,?[^,]*,?[^,]*/)){let e=this.value.split(",");e.forEach(((t,i)=>{p.forEach((t=>{for(Array.isArray(t)||(t=[t,""]);e[i].match(t[0]);)e[i]=e[i].replace(t[0],t[1])}))})),$(d[0]).val(e[0]),$(d[1]).val(e[1]),$(d[2]).val(e[2]),$(d[3]).val(e[3])}h()}));let p=[/[^\-0-9]/,[/(\d)-/,"$1"]];function h(){let e=[];d.each(((t,i)=>{e.push($(i).val())}));let t=`[${e.join(",")}]`;t.match(/\[,,,\]/)?u.val(null):u.val(t)}d.on("input",(function(e){let t=$(this).val(),i=e.target.selectionStart;p.forEach((e=>{Array.isArray(e)||(e=[e,""]);let n=0;for(;t.match(e[0]);){if(n>99)throw"Executing of regex patterns on input took too long, action aborted";let a=t.length;t=t.replace(e[0],e[1]),$(this).val(t),i-=a-t.length,n++}})),$(this).val(t),this.setSelectionRange(i,i)})),d.on("input",h),n&&(r.append($("<hr>")),r.append(generateTipElement(n)))}get value(){return this.find("input.invisible").val()}set value(e){this.find("input").each(((t,i)=>{$(i).val(e?.[t]??null)}))}isFilled(){return Boolean(this.value?.match(/.+,.+,.+,.+/))}addInputListeners(e,t){this.inputElement.on(e,t)}},Range:class extends GeneralFormRow{constructor({id:e,ignoreId:t,label:i,tip:n,inputClass:a,ignoreOutput:l,required:s,defaultVal:r}){if(!e&&!t)throw"Expected field ID, got undefined";if(!i)throw"Expected field label, got undefined";super({id:e,defaultVal:r,ignoreOutput:l,type:"range"}),this.append($(`\n                <div class="label-container">\n                    <label for="${this.id?this.id+"1":""}">${i}</label>\n                </div>\n                `)),s&&this.find(".label-container")?.append($('<span class="required-asterisk" title="This field is required!">*</span>')),this.append($(`\n                <div class="input-container unselectable">\n                    <input class="range-field sizeXS ${a?a+"1":""}" type="text"${this.id?' id="'+this.id+'1" ':""} autocomplete="off">\n                    <span>..</span>\n                    <input class="range-field sizeXS ${a?a+"2":""}" type="text"${this.id?' id="'+this.id+'2" ':""} autocomplete="off">\n                    <input class="invisible ${a||""}" type="text"${this.id?' id="'+this.id+'" ':""} tabindex="-1">\n                    <div class="clear-button-container">\n                        <button class="clear-button" tabindex="-1">x</button>\n                    </div>\n                </div>\n                `));let o=this.find(".input-container");this.whyDisabledLocation=o;let d=o.children("input:not(.invisible)"),u=o.children("input.invisible");this.inputElement=d,this.dummyInput=u;let c=this.find(".clear-button");c.click((function(){let e=$(this).parent().parent().children("input, select");e.val(null),e[0].focus(),e.trigger("input")})),c.hover((function(){$(d[1]).addClass("fake-hover")}),(function(){$(d[1]).removeClass("fake-hover")})),c.attr({title:"Clear the field"});let p=[/[^0-9,\.\-]/,[/,/,"."],[/(.+)-/,"$1"],[/\.(.*)\./,".$1",-1],[/^(-?)\./,"$10."],[/^(-?)0{2,}/,"$10"]];function h(){let e=[];d.each(((t,i)=>{e.push($(i).val())}));let t=e.join("..");e[0]==e[1]&&(t=e[0]),t.match(/^\.\.$/)?u.val(null):u.val(t)}d.on("input",(function(){if(this.value?.match(/.*\.\..*/)){let e=this.value.split("..");e.forEach(((t,i)=>{p.forEach((t=>{for(Array.isArray(t)||(t=[t,""]);e[i].match(t[0]);)e[i]=e[i].replace(t[0],t[1])}))})),$(d[0]).val(e[0]),$(d[1]).val(e[1])}h()})),d.on("input",(function(e){let t=$(this).val(),i=e.target.selectionStart;p.forEach((e=>{Array.isArray(e)||(e=[e,""]);let n=0;for(;t.match(e[0]);){if(n>99)throw"Executing of regex patterns on input took too long, action aborted";let a=t.length;t=t.replace(e[0],e[1]),$(this).val(t),i-=a-t.length,n++}})),$(this).val(t),this.setSelectionRange(i,i)})),d.on("input",h),n&&(o.append($("<hr>")),o.append(generateTipElement(n)))}get value(){return this.find("input.invisible").val()}set value(e){this.find("input").each(((t,i)=>{$(i).val(e?.[t]??null)}))}addInputListeners(e,t){this.inputElement.on(e,t)}},Coordinates:class extends GeneralFormRow{constructor({id:e,ignoreId:t,label:i,tip:n,inputClass:a,ignoreOutput:l,required:s,defaultVal:r}){if(!e&&!t)throw"Expected field ID, got undefined";if(!i)throw"Expected field label, got undefined";super({id:e,defaultVal:r,ignoreOutput:l,type:"coords"}),this.append($(`\n                <div class="label-container">\n                    <label for="${this.id??""}">${i}</label>\n                </div>\n                `)),s&&this.find(".label-container")?.append($('<span class="required-asterisk" title="This field is required!">*</span>')),this.append($('\n                <div class="input-container unselectable">\n                    <div class="clear-button-container">\n                        <button class="clear-button" tabindex="-1">x</button>\n                    </div>\n                    <button class="coordinate-button relative">~</button>\n                    <button class="coordinate-button directional">^</button>\n                </div>\n                '));let o=this.find(".input-container");this.whyDisabledLocation=o;let d=$(`<input class="textfield sizeL ${a||""}" type="text" name="text-field"${this.id?' id="'+this.id+'" ':""} autocomplete="off">`);this.inputElement=d;let u=this.find(".clear-button");u.click((function(){let e=$(this).parent().parent().children("input, select");e.val(null),e[0].focus(),e.trigger("input")})),u.hover((function(){d.addClass("fake-hover")}),(function(){d.removeClass("fake-hover")})),u.attr({title:"Clear the field"});let c=[/[^~^.,0-9 ]/,[/,/,"."],/^ +/,[/  +$/," "],[/([^ ]+ [^ ]+ [^ ]+) +.*$/,"$1"]];d.on("input",(function(e){let t=$(this).val(),i=e.target.selectionStart;c.forEach((e=>{Array.isArray(e)||(e=[e,""]);let n=0;for(;t.match(e[0]);){if(n>99)throw"Executing of regex patterns on input took too long, action aborted";let a=t.length;t=t.replace(e[0],e[1]),$(this).val(t),i-=a-t.length,n++}})),$(this).val(t),this.setSelectionRange(i,i)})),o.prepend(d),o.find(".coordinate-button").click((function(){!function(e,t=""){let i=($(e).val()??"").split(" "),n={symbol:(i[0]??"").match(/[~^]/)?.[0],value:(i[0]??"").replace(/[^\.0-9]/g,"")},a={symbol:(i[1]??"").match(/[~^]/)?.[0],value:(i[1]??"").replace(/[^\.0-9]/g,"")},l={symbol:(i[2]??"").match(/[~^]/)?.[0],value:(i[2]??"").replace(/[^\.0-9]/g,"")};n.symbol==t&&a.symbol==t&&l.symbol==t&&(t="");let s=" ";t||n.value||a.value||l.value||(s="");n.symbol=t,a.symbol=t,l.symbol=t,$(e).val(`${n.symbol}${n.value}${s}${a.symbol}${a.value}${s}${l.symbol}${l.value}`),$(e).focus(),$(e).trigger("input")}($(this).parent().children("input"),this.innerText),$("#coordinates-field").val()})),n&&(o.append($("<hr>")),o.append(generateTipElement(n)))}get value(){return this.find("input").val()}set value(e){this.find("input").val(e??null),this.find("input").trigger("input")}isFilled(){return Boolean(this.value?.match(/[~^]?.* [~^]?.* [~^]?.*/))}addInputListeners(e,t){this.inputElement.on(e,t)}},Time:class extends GeneralFormRow{constructor({id:e,ignoreId:t,label:i,min:n,max:a,tip:l,inputClass:s,ignoreOutput:r,required:o,defaultVal:d}){if(!e&&!t)throw"Expected field ID, got undefined";if(!i)throw"Expected field label, got undefined";super({id:e,defaultVal:d,ignoreOutput:r,type:"time"}),this.append($(`\n                <div class="label-container">\n                    <label for="${this.id}">${i}</label>\n                </div>\n                `)),o&&this.find(".label-container")?.append($('<span class="required-asterisk" title="This field is required!">*</span>')),this.append($(`\n                <div class="input-container unselectable">\n                    <input class="time-field sizeM ${s?s+"1":""}" type="text"${this.id?' id="'+this.id+'1" ':""} autocomplete="off">\n                    <input class="invisible ${s||""}" type="text"${this.id?' id="'+this.id+'" ':""} tabindex="-1">\n                    <div class="clear-button-container">\n                        <button class="clear-button" tabindex="-1">x</button>\n                    </div>\n                    <div class="time-display-container hidden">\n                        <span class="time-display">Time in ticks: </span>\n                        <span class="time-display time-display-val">0</span>\n                    </div>\n                </div>\n                `));let u=this.find(".input-container");this.whyDisabledLocation=u;let c=u.find("input:not(.invisible)"),p=u.find("input.invisible"),h=u.find(".time-display-val");this.inputElement=c,this.dummyInput=p;let f=this.find(".clear-button");f.click((function(){let e=$(this).parent().parent().children("input, select");e.val(null),e[0].focus(),e.trigger("input")})),f.hover((function(){c.addClass("fake-hover")}),(function(){c.removeClass("fake-hover")})),f.attr({title:"Clear the field"}),null!=n&&c.attr({min:n}),null!=a&&c.attr({max:a});let m=[/[^minaxtshdy0-9 \.,\-]/i,/^[^m0-9\-]/i,[/,/,"."],[/(min|max).+/i,"$1"],[/.+(min|max)/i,"$1"],[/(\d) /,"$1"],[/(\d[tshdy])[^0-9 -]/i,"$1"],[/m[^ia 0-9\-][^nx]?/i,"m"],[/(\d)[nx]/i,"$1"],[/mi[^n]/i,"mi"],[/ma[^x]/i,"ma"],[/(t.*?)t/i,"$1"],[/(s.*?)s/i,"$1"],[/(m.*?)m/i,"$1"],[/(h.*?)h/i,"$1"],[/(d.*?)d/i,"$1"],[/(y.*?)y/i,"$1"],[/-[minaxtshdy]/i,"-",-1]];function v(e,t,i,n=""){e.val(i),t.html(addThousandSep(i)+n)}m&&c.on("input",(function(e){let t=$(this).val(),i=e.target.selectionStart;m.forEach((e=>{Array.isArray(e)||(e=[e,""]);let n=0;for(;t.match(e[0]);){if(n>99)throw"Executing of regex patterns on input took too long, action aborted";let a=t.length;t=t.replace(e[0],e[1]),$(this).val(t),i-=a-t.length+(e[2]??0),n++}})),$(this).val(t),this.setSelectionRange(i,i)})),c.on("input",(function(e){let t,i=$(this).val();if(!(i&&(i.match(/^min$/)||i.match(/^max$/))||i.match(/\d/)))return v(p,h,0),void u.find(".time-display-container").addClass("hidden");u.find(".time-display-container").removeClass("hidden");let n=Number($(this).attr("min")),a=Number($(this).attr("max"));isNaN(n)&&(n=-1/0),isNaN(a)&&(a=1/0);let l=/^(-?\d+(?:\.\d+)?)$/,s=/^min(?:imum)?$/i,r=/^max(?:imum)?$/i,o=/(-?\d+(?:\.\d+)?) ?t/i,d=/(-?\d+(?:\.\d+)?)$/i,c=/(-?\d+(?:\.\d+)?) ?s/i,f=/(-?\d+(?:\.\d+)?) ?m/i,m=/(-?\d+(?:\.\d+)?) ?h/i,b=/(-?\d+(?:\.\d+)?) ?d/i,g=/(-?\d+(?:\.\d+)?) ?y/i;if(i.match(l)){t=Number(i.match(l)[1]),t=Math.max(n,t),t=Math.min(a,t);let e=t;return t=Math.round(t),v(p,h,t,t==n?" (minimum)":t==a?" (maximum)":""),void $(this).val(t==n?n:t==a?a:e)}if(i.match(s))return t=n,void v(p,h,t," (minimum)");if(i.match(r))return t=a,void v(p,h,t," (maximum)");let x={t:0,s:0,m:0,h:0,d:0,y:0};const w=20,y=1200,C=72e3,E=1728e3,I=63072e4;i.match(o)?x.t=Number(i.match(o)[1]):i.match(d)&&(x.t=Number(i.match(d)[1])),i.match(c)&&(x.s=Number(i.match(c)[1])),i.match(f)&&(x.m=Number(i.match(f)[1])),i.match(m)&&(x.h=Number(i.match(m)[1])),i.match(b)&&(x.d=Number(i.match(b)[1])),i.match(g)&&(x.y=Number(i.match(g)[1])),t=x.t,t+=x.s*w,t+=x.m*y,t+=x.h*C,t+=x.d*E,t+=x.y*I,t=Math.max(n,t),t=Math.min(a,t),t=Math.round(t),v(p,h,t,t==n?" (minimum)":t==a?" (maximum)":"")})),u.prepend(c),l&&($("<hr>").insertBefore(u.find(".time-display-container")),generateTipElement(l).insertBefore(u.find(".time-display-container")))}get value(){return this.find("input.invisible").val()}set value(e){this.find("input").each(((t,i)=>{$(i).val(e?.[t]??null)}))}addInputListeners(e,t){this.inputElement.on(e,t)}},TrueFalse:class extends GeneralFormRow{constructor({id:e,ignoreId:t,label:i,tip:n,inputClass:a,ignoreOutput:l,required:s}){if(!e&&!t)throw"Expected field ID, got undefined";if(!i)throw"Expected field label, got undefined";super({id:e,ignoreOutput:l,randomId:1,type:"true-false"}),this.append($(`\n                <div class="label-container">\n                    <label for="${this.id}">${i}</label>\n                </div>\n                `)),s&&this.find(".label-container")?.append($('<span class="required-asterisk" title="This field is required!">*</span>')),this.append($(`\n                <div class="input-container unselectable">\n                    <input class="fut-field-radio fut-field-radio-f ${a?a+"-f":""}" type="radio" name="${e}" id="${e}-f">\n                    <input class="fut-field-radio fut-field-radio-u ${a?a+"-u":""}" type="radio" name="${e}" id="${e}-u" checked>\n                    <input class="fut-field-radio fut-field-radio-t ${a?a+"-t":""}" type="radio" name="${e}" id="${e}-t">\n                    <input class="invisible ${a||""}" type="text" id="${e}" tabindex="-1">\n                    <label class="fut-field fut-field-f" for="${e}-f" tabindex="0" title="false"><i class="fas fa-times"></i></label>\n                    <label class="fut-field fut-field-u" for="${e}-u" tabindex="0" title="unset (use default)">/</label>\n                    <label class="fut-field fut-field-t" for="${e}-t" tabindex="0" title="true"><i class="fas fa-check"></i></label>\n                </div>\n                `));let r=this.find(".input-container");this.whyDisabledLocation=r;let o=r.find("input:not(.invisible)"),d=r.find("input.invisible");this.inputElement=o,this.dummyInput=d,o.change((function(e){return $(o[0]).is(":checked")?(d.val(0),void(isOutputNumber&&d.val("0b"))):$(o[1]).is(":checked")?void d.val(null):$(o[2]).is(":checked")?(d.val(1),void(isOutputNumber&&d.val("1b"))):void 0})),n&&(r.append($("<hr>")),r.append(generateTipElement(n)))}get value(){let e=this.find('input[type="radio"]');return e[0].is(":checked")?0:e[2].is(":checked")?1:null}set value(e){let t=this.find('input[type="radio"]');0==e||"false"==e||"0b"==e||0==Number(e)?($(t[0]).prop("checked",1),$(t[1]).prop("checked",null),$(t[2]).prop("checked",null)):0==e||"true"==e||"1b"==e||1==Number(e)?($(t[0]).prop("checked",null),$(t[1]).prop("checked",null),$(t[2]).prop("checked",1)):($(t[0]).prop("checked",null),$(t[1]).prop("checked",1),$(t[2]).prop("checked",null)),this.find("input").trigger("input")}addInputListeners(e,t){this.inputElement.on(e,t)}},Checkbox:class extends GeneralFormRow{constructor({id:e,ignoreId:t,label:i,tip:n,ignoreOutput:a}){if(!e&&!t)throw new Error("Expected field ID, got undefined");if(!i)throw new Error("Expected field label, got undefined");super({id:e,ignoreOutput:a,randomId:1,type:"checkbox"}),super({id:e=e??(Math.random()*Math.random()+1).toString(36).substring(2),ignoreOutput:a}),this.append($(`\n                <div class="label-container">\n                    <label for="${this.id}">${i}</label>\n                </div>\n                `)),this.append($(`\n                <div class="input-container unselectable">\n                    <input class="checkbox-field" type="checkbox" name="${e}" id="${e}">\n                    <label class="checkbox-label" for="${e}" tabindex="0"><i class="fas fa-check"></i></label>\n                    <input class="invisible" type="text" tabindex="-1">\n                </div>\n                `));let l=this.find(".input-container");this.whyDisabledLocation=l;let s=l.find("input.checkbox-field");this.inputElement=s,n&&(l.append($("<hr>")),l.append(generateTipElement(n)))}get value(){return this.inputElement.is(":checked")}set value(e){this.inputElement.prop("checked",e)}addInputListeners(e,t){this.inputElement.on(e,t)}},Color:class extends GeneralFormRow{constructor({id:e,ignoreId:t,label:i,tip:n,required:a,ignoreOutput:l,format:s,defaultVal:r}){if(!e&&!t)throw"Expected field ID, got undefined";if(!i)throw"Expected field label, got undefined";super({id:e,defaultVal:r,ignoreOutput:l,type:"color"}),s=s??"int",this.append($(`\n                <div class="label-container">\n                    <label for="${this.id}">${i}</label>\n                </div>\n                `)),a&&this.find(".label-container")?.append($('<span class="required-asterisk" title="This field is required!">*</span>')),this.append($(`\n                <div class="input-container unselectable">\n                    <input class="color-field" type="color"${this.id?' id="'+this.id+'1" ':""} autocomplete="off">\n                    <input class="color-field-text sizeS" type="text"${this.id?' id="'+this.id+'1" ':""} maxlength="7" autocomplete="off">\n                    <input class="invisible" type="text"${this.id?' id="'+this.id+'" ':""} tabindex="-1">\n                    <div class="clear-button-container">\n                        <button class="clear-button" tabindex="-1">x</button>\n                    </div>\n                </div>\n                `));let o=this.find(".input-container"),d=o.find("input.color-field"),u=o.find("input.color-field-text"),c=o.find("input.invisible");this.whyDisabledLocation=o,this.inputElement=u,this.inputElementColor=d,this.dummyInput=c,d.val("#ff0000");let p=this.find(".clear-button");p.click((function(){let e=$(this).parent().parent().children('input:not([type="color"]), select');e.val(null),e[0].focus(),e.trigger("input")})),p.hover((function(){u.addClass("fake-hover")}),(function(){u.removeClass("fake-hover")})),p.attr({title:"Clear the field"}),d.on("input",(function(){u.val(this.value),u.trigger("input")}));let h=[/[^#0-9a-f]/i,[/#(.*)#/,"#$1"],[/^([^#])/,"#$1"]];u.on("input",(function(e){let t=e.target.selectionStart;$(this).val($(this).val().toUpperCase()),this.setSelectionRange(t,t)})),u.on("input",(function(e){let t=$(this).val(),i=e.target.selectionStart;h.forEach((e=>{Array.isArray(e)||(e=[e,"",0]);let n=0;for(;t.match(e[0]);){if(n>99)throw"Executing of regex patterns on input took too long, action aborted";let a=t.length;t=t.replace(e[0],e[1]),$(this).val(t),i-=a-t.length+(e[2]??0),n++}})),$(this).val(t),this.setSelectionRange(i,i)})),u.on("input",(function(){let e=$(this).val();if(""!=e)if(e.match(/^#[0-9a-f]{6}$/i))d.val(e),u.removeClass("error"),"hex"==s||(e=e.replace("#",""),e=parseInt(e,16)),c.val(e);else if(e.match(/^#[0-9a-f]{3}$/i)){let t=e.charAt(1),i=e.charAt(2),n=e.charAt(3);if(e="#"+t+t+i+i+n+n,d.val(e),u.removeClass("error"),"hex"==s)c.val(e);else if("rgb"==s||"rgbint"==s||"rgbfloat"==s){let t,i,n;t=e.substring(1,3),i=e.substring(3,5),n=e.substring(5,7),t=parseInt(t,16),i=parseInt(i,16),n=parseInt(n,16),"rgbfloat"==s&&(t=Math.round(t/255*100)/100,i=Math.round(i/255*100)/100,n=Math.round(n/255*100)/100),c.val(`${t} ${i} ${n}`)}else e=e.replace("#",""),e=parseInt(e,16),c.val(e)}else u.addClass("error"),d.val("#000000"),c.val(null);else u.removeClass("error")})),n&&($("<hr>").insertBefore(o.find(".time-display-container")),generateTipElement(n).insertBefore(o.find(".time-display-container")))}get value(){return this.find("input.invisible").val()}set value(e){return e.match(/^#[0-9a-f]{6}$/i)?(this.inputElementColor.val(e),void this.inputElementColor.trigger("input")):Number(e)?(e=e.toString(16),this.inputElementColor.val(e),void this.inputElementColor.trigger("input")):void 0}addInputListeners(e,t){this.inputElement.on(e,t)}},Adder:class extends GeneralFormRow{constructor({id:e,ignoreId:t,label:i,buttonText:n,emptyListText:a,itemConstructor:l,item:s,inputHandler:r,inputOnly:o,tip:d,inputClass:u,required:c,defaultVal:p}){if(!e&&!t)throw"Expected field ID, got undefined";if(!i&&!o)throw"Expected field label, got undefined";super({id:e,defaultVal:p,type:"adder"}),this.append($(`\n                <div class="label-container addlist-label">\n                    <label for="${this.id??""}">${i}</label>\n                </div>\n                `)),this.append($(`\n                <div class="addlist-input input-container unselectable">\n                    <ul class="addlist">\n                        <li class="no-items-notice">\n                            <span>${a??"No items added yet!"}</span>\n                        </li>\n                    </ul>\n                    <input class="invisible ${u||""}" type="text"${this.id?' id="'+this.id+'" ':""} tabindex="-1">\n                    <div class="addlist-buttons">\n                        <button class="addlist-button" id="addlist-field-add">\n                            <span class="plus">+</span>\n                            <span class="text">${n??"Add element..."}</span>\n                        </button>\n                    </div>\n                </div>\n                `));let h=this.find(".input-container"),f=h.children("input.invisible"),m=h.find(".addlist-buttons"),v=h.find(".addlist-button");this.whyDisabledLocation=h.children(".addlist-buttons"),this.dummyInput=f;let b=[];this.allElements=b,v.click((function(){let e=$(this).parent().parent().find(".addlist"),t=$(`\n                <div>\n                    ${d?"":"<hr>"}\n                    <button class="delete-item-button red-hover"><i class="fas fa-trash"></i></button>\n                </div>\n                `);b.push(t),l?t.prepend(new l(s)):t.prepend($(s)),function(e,t){let i=$('<li class="addlist-item"></li>');i.html(e),i.insertBefore(t)}(t,e.children(".no-items-notice")),t.find("button.delete-item-button").click((function(){let e=$(this).parent();for(;!e.hasClass("addlist-item");)e=e.parent();e.remove();let t=h.children(".addlist").children(".addlist-item").children("div").children(".input-container");r?.(t,f),f.trigger("input")})),t.find("input, select").on("input",(function(){let e=h.children(".addlist").children(".addlist-item").children("div").children(".input-container");r?.(e,f),f.trigger("input")}))})),d&&(m.append($("<hr>")),m.append(generateTipElement(d)))}get value(){return this.children(".input-container").children("input.invisible").val()}addInputListeners(e,t){this.allElements.forEach((i=>{i.inputElement.on(e,t)}))}},compound:{Selector:class extends GeneralFormRow{constructor({id:e,ignoreId:t,label:i,playerOnly:n,codePreviewLocation:a,hidden:l=0,required:s=0}){if(!e&&!t)throw new Error("Expected field ID, got undefined");if(!i)throw new Error("Expected field label, got undefined");super({id:e,type:"selector"}),this.append($(`\n                    <div class="label-container addlist-label">\n                        <label for="${this.id??""}">${i}</label>\n                    </div>\n                    `)),s&&this.find(".label-container")?.append($('<span class="required-asterisk" title="This field is required!">*</span>'));let r=new BoxContainer({hideable:1,additionalChildren:['<span class="code-preview">\n                            <span class="label">Selector preview: </span>\n                            <code class="preview-field">\n                                <span></span>\n                                <div class="info-container">\n                                    <div class="info-message"></div>\n                                </div>\n                            </code>\n                        </span>'],hidden:l,classes:"selector-container"}).addToDOM(this),o=r.inputContainer,d=r.dummyInput,u=r.additionalChildren[0],c=u.find(".preview-field > .info-container > .info-message");a?(u.remove(),u=a):u=u.find(".preview-field > span"),this.whyDisabledLocation=o,this.codePreview=u,this.dummyInput=d;let p=new FormRow.Select({ignoreId:1,label:"Selector",options:[unsetOption,...allSelectors.raw],tip:`\n                    <span>\n                        The base selector.\n                        <br/>\n                        <ul>\n                            ${allSelectors.explanations.reduce(((e,t)=>e+["<li>","<b><code>",t[0],"</code></b>"," - ",t[1],".","</li>"].join("")),"")}\n                        </ul>\n                    </span>\n                    `}).addToDOM(o);this.selectorField=p;let h=new FormRow.Text({ignoreId:1,label:"Player's name",size:"L",required:1,inputRegex:[/[^a-z0-9_]/i,/^\d/]}).addToDOM(o);this.playerNameField=h;let f=new Section({ignoreId:1,optional:1,collapsed:1,header:{text:"Additional arguments",tag:"h6"}}).addToDOM(o),m={};Object.keys(allSelectorArgs).forEach((e=>{let t=allSelectorArgs[e];(n&&t.forPlayer||!n)&&(t.gapBefore&&new FormRow.visual.Gap(t.gapBefore).addToDOM(f),m[e]=generateFormRow(t,e)?.addToDOM(f),"string"==typeof t.comingSoon&&m[e].setComingSoon(t.comingSoon),t.gapAfter&&new FormRow.visual.Gap(t.gapAfter).addToDOM(f))}));for(const e in m){const t=allSelectorArgs[e],i=m[e];t.disableIf?.length&&t.disableIf.forEach((e=>{let t;t="selector"==e.field?p:m[e.field],t.inputElement?.on("input",(function(){e.values.includes(t.value)?(i.isComingSoon()||i.disable(e.whyDisabled),void 0!==e.disableValue&&(i.value=e.disableValue)):(i.isComingSoon()||i.enable(),void 0!==e.enableValue&&(i.value=e.enableValue))}))}))}p.inputElement.on("input",(function(){"Player name"==this.value?(h.enable(),f.disable('Not available when Selector is set to "Player name".',void 0,f.header)):(h.disable('Only available when Selector is set to "Player name".'),f.enable())})),p.inputElement.on("input",b),h.inputElement.on("input",b);for(const e in m){const t=m[e];t.inputElement?.on("input",b),t.dummyInput?.on("input",b)}function v(){switch(m.team__2.value){case"0":m.team.value=m.team__1.value,m.team.forceValue=0;break;case"1":m.team.value=m.team__1.value?"!"+m.team__1.value:null,m.team.forceValue=0;break;case"2":m.team.value="",m.team.forceValue=1;break;case"3":m.team.value="!",m.team.forceValue=0}b()}function b(){if(null==p.value)return;let e=[];if(c.parent().addClass("hidden"),"Player name"==p.value)return d.val(h.value),void u.html(h.value);for(const t in m){const i=m[t];i.ignoreOutput||i.isDisabled()&&!i.isLocked()||!i.value&&!i.forceValue||"null"==i.value||"{}"==i.value||e.push([t,"=","name"==t?i.value?.match?.(/!/)?'!"':'"':"","name"==t?i.value?.replace?.(/!/,""):i.value,"name"==t?'"':""].join(""))}e.length&&c.parent().removeClass("hidden");let t=[p.value,e.length?"[":"",e.length?e.join(","):"",e.length?"]":""],i=t.join("");d.val(i),u.html(i);let n=e.join(",");e.length&&(n=n.replace(/,/g,",<br/>&nbsp;&nbsp;"),n=n.replace(/scores=\{/g,"scores={<br/>&nbsp;&nbsp;&nbsp;&nbsp;"),n=n.replace(/scores=\{(.+?),<br\/>/g,"scores={$1,<br/>&nbsp;&nbsp;"),n=n.replace(/scores=\{(.+?)\}/g,"scores={$1<br/>&nbsp;&nbsp}"),n=n.replace(/nbt=(.+?),<br\/>&nbsp;&nbsp;/g,"nbt=$1,")),t=[p.value,e.length?"[<br/>&nbsp;&nbsp;":"",e.length?n:"",e.length?"<br/>]":""],c.html(t.join(""))}m.team__2.inputElement.on("input",v),m.team__1.inputElement.on("input",v),v(),p.inputElement.trigger("input"),b(),this.allFields=m}get value(){return this.children(".input-container-master").children("input.invisible").val()}setProperties(e){if(!e)throw new Error("Expected property object, got nothing.");if("object"!=typeof e)throw new Error(`Invalid argument #1: expected object, got ${typeof e}.`);Object.keys(e).forEach((t=>{const i=this.allFields[t];i&&(i.value=e[t])}))}addInputListeners(e,t){this.selectorField.on(e,t),this.playerNameField.on(e,t),Object.values(this.allFields).forEach((i=>{i.addInputListeners?.(e,t)}))}},Score:class extends GeneralFormRow{constructor({id:e,ignoreId:t}){if(!e&&!t)throw new Error("Expected field ID, got undefined");super({id:e,type:"score"}),this.removeClass("form-row").addClass("input-container box-container score-container"),this.append($(`<input class="invisible" type="text"${this.id?' id="'+this.id+'" ':""} tabindex="-1">`)),this.dummyInput=this.children("input.invisible"),this.nameField=new FormRow.Text({ignoreId:1,size:"MAX",maxLength:16,label:"Name",inputRegex:[/[^a-z0-9_]/i,/^\d/]}).addToDOM(this),this.valueField=new FormRow.Range({ignoreId:1,label:"Value"}).addToDOM(this),this.nameField.inputElement.on("input",n),this.valueField.inputElement.on("input",n);let i=this;function n(){if(!i.nameField.value||!i.valueField.value)return i.dummyInput.val(null);i.dummyInput.val([i.nameField.value,"=",i.valueField.value].join(""))}}get value(){return this.dummyInput.val()}set value(e){let t;e?.match?.(/([A-Za-z0-9_]+)=(?:(-?[\d\.]+)\.\.(-?[\d\.]*)|(-?[\d\.]*)\.\.(-?[\d\.]+))/)?(t=e.match(/([A-Za-z0-9_]+)=(?:(-?[\d\.]+)\.\.(-?[\d\.]*)|(-?[\d\.]*)\.\.(-?[\d\.]+))/),t=[t[1],t[2],t[3]]):t="string"!=typeof e?.[0]||"number"!=typeof e?.[1]&&"number"!=typeof e?.[2]?[null,null,null]:[e[0],e[1],e[2]],this.nameField.value=t[0],this.valueField.value=[t[1],t[2]]}addInputListeners(e,t){this.nameElement.inputElement.on(e,t),this.valueElement.inputElement.on(e,t)}},Sound:class extends GeneralFormRow{constructor({id:e,ignoreId:t,label:i,required:n=0,defaultVal:a}){if(!e&&!t)throw new Error("Expected field ID, got undefined");if(!i)throw new Error("Expected field label, got undefined");super({id:e,defaultVal:a,type:"sound"}),this.append($(`\n                    <div class="label-container">\n                        <label for="${this.id}">${i}</label>\n                    </div>\n                    `)),this.append($('\n                    <div class="input-container sound-container unselectable">\n                        <div class="code-preview sound-code-preview">\n                            <span class="label">Sound selected: </span>\n                            <code></code>\n                        </div>\n                        <div class="sound-list"></div>\n                        <input class="invisible" type="text" tabindex="-1">\n                    </div>\n                '));let l=this.find(".input-container"),s=l.find(".sound-list"),r=l.find(".invisible"),o=l.find("code");this.inputsLocation=s,this.dummyInput=r,this.codePreview=o;let d=this;function u(){c(s,this)}function c(e,t){let i=Number($(t).attr("index"));if(Number.isNaN(i)&&(i=0),!t||t&&"null"!=t.value){let t=e.find("select"),a=[];for(const e of t){const t=$(e);if(t&&t.val?.()&&"null"!=t.val()&&a.push(t.val()),t.attr("index")==i)break}let l=function(e){let t=allSoundsFancy;return e?.forEach((e=>{if(t=t[e],!t)throw new Error(`Cannot find sound named "${e}".`)})),Object.keys(t)}(a);if(!l.length){for(const t of e.children()){const e=$(t);e.attr("index")>i&&e.remove()}return}l.unshift(unsetOption);let s=$(`<select index="${i+1}"></select>`);for(let e of l)Array.isArray(e)||(e=[e,e]),s.append($(new Option(e[0],e[1])));if(s.change(u),s.change(p),n){function e(){if("null"==$(this).val()&&!$(this).hasClass("error"))return $(this).addClass("error"),void s.attr({title:"This field is required!"});$(this).removeClass("error"),s.attr({title:""})}s.on("blur",e),s.on("change",e)}for(const t of e.children()){const e=$(t);e.attr("index")>i&&e.remove()}e.append(s),e.append($(`<span index="${i+1}">.</span>`))}else for(const t of e.children()){const e=$(t);e.attr("index")>i&&e.remove()}}function p(){let e=d.inputsLocation.children("select"),t=e[e.length-1]?.value;if(t&&"null"==t)return d.dummyInput.val(null),void d.codePreview.html("None yet!");let i=[];e.each(((e,t)=>{"—"!=t.value&&i.push(t.value)})),d.dummyInput.val(i.join(".")),d.codePreview.html(i.join("."))}n&&this.find(".label-container")?.append($('<span class="required-asterisk" title="This field is required!">*</span>')),c(s),p()}get value(){return this.dummyInput.val()}set value(e){}addInputListeners(e,t){this.inputsLocation.children("select").on(e,t)}},Particle:class extends GeneralFormRow{constructor({id:e,ignoreId:t}){if(!e&&!t)throw new Error("Expected field ID, got undefined");super({id:e,randomId:1,type:"particle"}),this.append($('<div class="particle-list"></div>')),this.append($(`<input class="invisible" type="text" tabindex="-1"${e&&' id="'+e+'"'}>`));let i=this.children(".particle-list"),n=this.children(".invisible");this.inputsLocation=i,this.dummyInput=n;let a=this;const l={};function s(e){return $(`\n                    <label for="${a.id}-${e}" class="particle-item" tabindex="0">\n                        <img src="/img/particle/${e}.png">\n                        <code>${e.replace(/_/g," ")}</code>\n                    </label>\n                    `)}function r(e){return $(`<input class="particle-radio" type="radio" name="${a.id}" id="${a.id}-${e}" particle="${e}">`)}function o(){let e;for(const t in l){const i=l[t];if(i.is(":checked")){e=i.attr("particle");break}}n.val(e),n.trigger("input")}this.allParticleRadios=l,function(){for(const e of allParticles){let t=s(e),n=r(e);l[e]=n,n.on("input",o),t.on("keydown",(function(e){const t=e.which;if(13==t||32==t){let t=$(this).attr("for");$("#"+t).prop("checked",1),e.preventDefault()}})),i.append(n),i.append(t)}}(),l[Object.keys(l)[0]].prop("checked",1),o()}get value(){return this.dummyInput.val()}set value(e){this.dummyInput.val(e),this.dummyInput.trigger("input"),this.allParticleRadios[e]?.prop("checked",1)}addInputListeners(e,t){this.inputsLocation.children("input").on(e,t)}isFilled(){return 1}}},visual:{Gap:class extends VisualFormRow{constructor(e){switch(super(),$.extend(this,$('<div class="form-gap"></div>')),e?.toLowerCase()){case"extra-small":case"xs":e=5;break;case"small":case"s":e=10;break;case"medium":case"m":e=15;break;case"large":case"l":e=20;break;default:e=e??10}this.css({height:e})}},Header:class extends VisualFormRow{constructor({text:e,tag:t="h4",fontsize:i,textAfter:n}){if(!e)throw"Expected header text, got nothing.";super(),$.extend(this,$('<button class="form-header"></button>'));let a=$(`<${t}><span>${e}</span></${t}>`);this.append(a),this.css({"font-size":i}),n&&$(`<span class="text-after">${n.text}</span>`).css(n.css??{}).appendTo(a)}},TextRow:class extends VisualFormRow{constructor({text:e,showOnlyIfEmpty:t=0}){if(!e)throw"Expected text content, got nothing.";super(),$.extend(this,$(`<span class="form-text">${e}</span>`)),t&&this.addClass("empty-only")}}}};function generateFormRow(e,t){switch(e.type.toLowerCase()){case"textrow":return new FormRow.visual.TextRow(e);case"dummy":return new FormRow.Dummy({ignoreId:1,...e});case"text":return new FormRow.Text({ignoreId:1,...e});case"nottext":return new FormRow.Text({ignoreId:1,negationButton:1,...e});case"number":return new FormRow.Number({ignoreId:1,...e});case"select":case"notselect":return new FormRow.Select({ignoreId:1,...e});case"range":return new FormRow.Range({ignoreId:1,...e});case"coordinates":return new FormRow.Coordinates({ignoreId:1,...e});case"vec3":return new FormRow.Vec3({ignoreId:1,...e});case"uuid":return new FormRow.UUID({ignoreId:1,...e});case"time":return new FormRow.Time({ignoreId:1,...e});case"color":return new FormRow.Color({ignoreId:1,...e});case"sound":return new FormRow.compound.Sound({ignoreId:1,...e});case"selector":return new FormRow.compound.Selector({ignoreId:1,...e});case"particle":return new FormRow.compound.Particle({ignoreId:1});case"noteselector":case"block":case"item":return new FormRow.Text({ignoreId:1,size:"M",...e});case"advancementadder":case"tagadder":return new FormRow.Adder({ignoreId:1,...e,itemConstructor:FormRow.Text,item:{ignoreId:1,size:"M",inputOnly:1,maxLength:6,negationButton:1},inputHandler:function(e,i){let n=[];e.each(((e,i)=>{let a=$($(i).find("input")[0]).val();if(a&&"!"!=a){let i="";0!=e&&(i+=`${t}=`),i+=a,n.push(i)}})),i.val(n.join(","))}});case"gamemodeadder":case"typeadder":return new FormRow.Adder({ignoreId:1,...e,itemConstructor:FormRow.Select,item:{ignoreId:1,inputOnly:1,negationButton:1,options:e.options},inputHandler:function(e,i){let n=[];e.each(((e,i)=>{let a=$($(i).find("input.invisible")[0]).val();if(a&&"!"!=a){let i="";0!=e&&(i+=`${t}=`),i+=a,n.push(i)}})),i.val(n.join(","))}});case"scoreadder":return new FormRow.Adder({ignoreId:1,...e,itemConstructor:FormRow.compound.Score,item:{ignoreId:1},inputHandler:function(e,t){let i=[];e.each(((e,t)=>{i.push($(t).children("input.invisible").val())})),t.val(i.length?"{"+i.join(",")+"}":null)}});case"predicateadder":return new FormRow.Adder({ignoreId:1,...e,itemConstructor:FormRow.Text,item:{ignoreId:1,size:"M",inputOnly:1,maxLength:6,negationButton:1},inputHandler:function(e,i){let n=[];e.each(((e,i)=>{let a=$($(i).find("input")[0]).val();if(a&&"!"!=a){let i="";0!=e&&(i+=`${t}=`);let l="";a.match(/^!/)&&(a=a.substring(1),l="!"),a.match(/.+:.+/)||(a="minecraft:"+a),i+=l+a,n.push(i)}})),i.val(n.join(","))}});default:throw new Error(`Cannot find proper constructor for "${t}" field (type: "${e.type}")`)}}export default class Form extends VisualFormRow{constructor(e){if(!e)throw new Error("Error while generating a form: expected form data, got nothing.");super(),$.extend(this,$('<div class="generator-container"></div>'));let t={},i={};e.steps.forEach(((e,n)=>{let a=new FormStep({stepNum:n+1,header:e.header,collapsed:e.collapsed,optional:e.optional}).addToDOM(this);for(const n of e.fields)"textrow"==n.type&&generateFormRow(n,n.name)?.addToDOM(a.section),n.name&&(t[n.name]=generateFormRow(n,n.name)?.addToDOM(a.section),t[n.name].required=n.required,t[n.name].default=n.default,i[n.name]=n)}));for(const e in t){const n=i[e],a=t[e];n.disableIf?.length&&n.disableIf.forEach((e=>{let i=t[e.field];function n(){e.values.includes(i.value)?(a.isComingSoon()||a.disable(e.whyDisabled),void 0!==e.disableValue&&(a.value=e.disableValue)):(a.isComingSoon()||a.enable(),void 0!==e.enableValue&&(a.value=e.enableValue))}i.addInputListeners("input",n),n()})),n.addIf?.length&&n.addIf.forEach((e=>{let i=t[e.field];function n(){e.values.includes(i.value)?a.removeClass("hidden"):a.addClass("hidden")}i.addInputListeners("input",n),n()}))}let n=(new FormOutput).addToDOM(this).textarea;for(const i in t){t[i].addInputListeners("input",(function(){e.generator(t,n)}))}}}class FormStep extends VisualFormRow{constructor({stepNum:e,header:t,collapsible:i=1,collapsed:n=0,optional:a=0}){super(),$.extend(this,$(`\n            <div class="generator-step">\n                <span class="step-number">${e}</span>\n            </div>\n        `));let l=new Section({header:t,collapsible:i,collapsed:n,optional:a}).addToDOM(this);this.section=l}}class FormOutput extends FormStep{constructor(){super({finish:1,collapsible:0,optional:0,header:{text:"Output",tag:"h1"}}),this.addClass("finish"),this.children(".step-number").html("Finish");let e=$('<textarea readonly placeholder="Command will appear here..."></textarea>');this.section.append(e),this.textarea=e}set value(e){this.find("textarea").val(e)}get value(){return this.find("textarea").val()}copyText(){}}function generateTipElement(e){let t=$('\n        <div class="info-button-container">\n            <button class="info-button">?</button>\n        </div>\n        ');return t.find(".info-button").click((function(t){let i=$("#info-container"),n=$(this).offset().top+$(this).outerHeight()+12,a=$(this).offset().left+$(this).outerWidth();i.css({top:n,left:a}),i.find(".info-message").html(e),i.removeClass("hidden"),t.stopPropagation()})),t.find(".info-button").attr({title:"Show additional information about this field"}),t}function addThousandSep(e){return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}$(window).ready((function(){$(".form")}));